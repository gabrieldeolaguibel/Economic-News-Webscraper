# -*- coding: utf-8 -*-
"""Webscraper.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1i1TnfoK4B5S2hCAhtiavzumj8hmKZNtM
"""

!pip install cloudscraper

from bs4 import BeautifulSoup
import cloudscraper
scraper = cloudscraper.create_scraper(delay=10,   browser={'custom': 'ScraperBot/1.0',})
url = 'https://www.forexfactory.com/calendar'
r = scraper.get(url)

soup = BeautifulSoup(r.text,'lxml')

calendar_table = soup.find('table', class_="calendar__table")



#print(calendar_table)

for row in calendar_table.select('tr[class*="calendar__row calendar_row"]'):
     row_data = [td.get_text(strip=True) for td in row.find_all('td')]
     print(row_data)

from bs4 import BeautifulSoup
import cloudscraper
import pandas as pd
scraper = cloudscraper.create_scraper(delay=10,   browser={'custom': 'ScraperBot/1.0',})
url = 'https://www.forexfactory.com/calendar'
r = scraper.get(url)

soup = BeautifulSoup(r.text,'lxml')

calendar_table = soup.find('table', class_="calendar__table")

#print(calendar_table)
column_headers = ['Date', 'Time', 'void', 'Currency', 'Impact', 'Event', 'Detail_void', 'Actual', 'Forecast', 'Previous', 'Graph_void']
date = ''
time = ''
void = ''
currency = ''
impact = ''
event = ''
detail_void = ''
actual = ''
forcast = ''
previous = ''
graph_void = ''
df = pd.DataFrame(columns = column_headers)
for row in calendar_table.select('tr[class*="calendar__row calendar_row"]'):
     row_data = [td.get_text(strip=True) for td in row.find_all('td')]
     df.loc[len(df)] = row_data
  
df

from bs4 import BeautifulSoup
import cloudscraper
import pandas as pd
scraper = cloudscraper.create_scraper(delay=10,   browser={'custom': 'ScraperBot/1.0',})
url = 'https://www.forexfactory.com/calendar#closed'
r = scraper.get(url)

soup = BeautifulSoup(r.text,'lxml')

calendar_table = soup.find('table', class_="calendar__table")

#print(calendar_table)
column_headers = ['Date', 'Time', 'void', 'Currency', 'Impact', 'Event', 'Detail_void', 'Actual', 'Forecast', 'Previous', 'Graph_void']
date = ''
time = ''
void = ''
currency = ''
impact = ''
event = ''
detail_void = ''
actual = ''
forcast = ''
previous = ''
graph_void = ''
df = pd.DataFrame(columns = column_headers)
for row in calendar_table.select('tr[class*="calendar__row calendar_row"]'):
     row_data = [td.get_text(strip=True) for td in row.find_all('td')]
     df.loc[len(df)] = row_data
  
df